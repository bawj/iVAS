package com.yn.electricity.controller.alarm;

import com.github.pagehelper.PageInfo;
import com.yn.electricity.ResultUtilVO;
import com.yn.electricity.ResultVO;
import com.yn.electricity.qto.AlarmConfigurationDTO;
import com.yn.electricity.request.AlarmConfigurationAlterRequest;
import com.yn.electricity.request.AlarmConfigurationRequest;
import com.yn.electricity.service.alarm.AlarmConfigurationService;
import com.yn.electricity.util.ValidationUtils;
import com.yn.electricity.vo.AlarmConfigurationVO;
import com.yn.electricity.vo.ConfigurationTypeVO;
import com.yn.electricity.vo.ResponseTypeVO;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import java.util.List;

/**
 * @author admin
 * Date 2021/5/20 17:51
 * Description 报警配置
 **/
@Api(tags = "报警配置")
@RestController
public class AlarmConfigurationController {


    @Resource
    private AlarmConfigurationService configurationService;

    @ApiOperation(value = "查询配置类型" , notes = "查询配置类型")
    @GetMapping("/find/configuration_type")
    public ResultVO<List<ConfigurationTypeVO>> findConfigurationType(){
        return ResultUtilVO.onSuccess(configurationService.findConfigurationType());
    }

    @ApiOperation(value = "响应类型查询" , notes = "响应类型查询")
    @GetMapping("/find/response_type")
    public ResultVO<List<ResponseTypeVO>> findResponseType(){
        return ResultUtilVO.onSuccess(configurationService.findResponseType());
    }

    @ApiOperation(value = "新增配置", notes = "新增配置")
    @PostMapping("/configuration/add")
    public ResultVO<String> addConfiguration(@RequestBody AlarmConfigurationRequest configurationRequest){
        ValidationUtils.checkParam(configurationRequest);
        return ResultUtilVO.onSuccess(configurationService.addConfiguration(configurationRequest));
    }

    @ApiOperation(value = "修改配置" , notes = "修改配置")
    @PostMapping("/configuration/update")
    public ResultVO<String> updateConfiguration(@RequestBody AlarmConfigurationAlterRequest configurationRequest){
        ValidationUtils.checkParam(configurationRequest);
        return ResultUtilVO.onSuccess(configurationService.updateConfiguration(configurationRequest));
    }

    @ApiOperation(value = "删除配置" , notes = "删除配置")
    @PostMapping("/configuration/delete")
    public ResultVO<String> configurationDel(@RequestBody List<Integer> ids){
        return ResultUtilVO.onSuccess(configurationService.configurationDel(ids));
    }

    @ApiOperation(value = "查询报警配置" , notes = "查询报警配置")
    @GetMapping("/configuration/find")
    public ResultVO<PageInfo<AlarmConfigurationVO>> findConfiguration(AlarmConfigurationDTO alarmConfigurationDTO){
        return ResultUtilVO.onSuccess(configurationService.findConfiguration(alarmConfigurationDTO));
    }

}

