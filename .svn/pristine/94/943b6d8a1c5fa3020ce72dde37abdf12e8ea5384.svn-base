package com.yn.electricity.security;

import com.yn.electricity.enums.ErrorCommonEnum;
import com.yn.electricity.utils.BizBusinessUtils;
import com.yn.electricity.web.WebResult;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.subject.Subject;
import org.apache.shiro.web.filter.AccessControlFilter;

import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

/**
 * @author: hxy
 * @description: 对没有登录的请求进行拦截, 全部返回json信息. 覆盖掉shiro原本的跳转login.jsp的拦截方式
 * @date: 2017/10/24 10:11
 */
public class InterceptorHandler extends AccessControlFilter {

	@Override
	protected boolean isAccessAllowed(ServletRequest request, ServletResponse response, Object mappedValue){
		Subject subject = SecurityUtils.getSubject();
		if(null == subject || !subject.isAuthenticated()){
			return false;
		}
		return true;
	}

	@Override
	protected boolean onAccessDenied(ServletRequest request, ServletResponse response){
		Subject subject = SecurityUtils.getSubject();
		WebResult.error(ErrorCommonEnum.NOT_login_ERROR, response);
		BizBusinessUtils.bizBusinessException("用户未登陆 login:{}", String.valueOf(subject.getPrincipal()));
		return false;
	}
}
